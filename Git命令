unity 基本命令 
mkdir ‘’ 创建文件夹
psw 查看当前工作目录
cat ‘’ 查看文件内容
ls -la|less   ll  查看文件夹列表内容
~ 用户家目录
vim ‘’ 文本编辑器
vim 命令  基本一级命令模式   ：命令二级模式 esc 退出  a.i.o编辑二级模式
i 当前字符之前插入 I 行首插入 a 当前字符之后插入 A 行尾插入 
o 下一行插入 O 上一行插入 x向后删除 X 向前删除 u 撤销
dd 删除行 yy复制 p粘贴
d+end.home 删除光标到行首.尾
：+Q退出 ：+X退出并保存

git 基本命令
git help +命令 可查看命令使用文档
git config user.name '' 签名
git config user.email ''签名
git init 初始化
git status 查看状态
git add  文件包含到暂存区

git commit -m 'msg' 从暂存区提交到本地库
git log [--oneline]查看历史版本
git reflog 可查看历史版本移动步数
git reset --head '哈希码' 基于索引回退版本
git reset --hard HEAD^ 往后退一步
git rm --cached ‘’ 从暂存区移除
rm '' 删除文件

git diff '' 和暂存区比较
git diff HEAD 和本地库比较

git branch '' 创建分支
git branch -v 查看分支
git checkout 切换分支
git merge ‘’ 合并 先切换到需要添加内容的分支，再merge目标分支
git remote -v 查看远程别名
git remote add 'origin' 'https//github.com/...' 添加别名
git remote remove origin 删除别名
git clone ‘远程’ 克隆远程库到本地 1.自动创建文件夹 2.自动初始化 git 自动创建 origin 远程 别名 3.账号密码未设置
git fork ‘远程’ 克隆到github上 通过 pull request 修改原对象 
git push ‘远程’ ‘分支名’
git fetch ‘远程’ ‘分支名’ 下载到本地 本地形如 origin/master
git pull =fetch + merge
解决冲突：1.编辑冲突文件 2.  add ‘’ 到暂存区 3.commit 到本地库 不需要文件名

使用GitHub 和 VisualStudio github 工具创建流程
1.本地创建 解决方案,git 本地库（勾选创建git库，将自动创建，配置过滤文件）
2.通过VisualStudio github 工具直接发布到 github远程库
3.注意 对解决方案的修改会导致 sln 文件和远程库不一致，要先 pull ，后push

对于已有项目 
1.先在 github 网站创建repository ,添加过滤文件
2.使用gitbash 将项目克隆到本地临时文件夹
3.将临时文件夹的所有内容拷贝到目标项目文件夹下
4.先将修改commit 到本地库
5.然后使用 git rebase origin/master  命令修改远程库 //本选方案 git pull --rebase 
6.push 到远程库即可


ssh 方式登录
1.cd ~
2.rm -rvf .ssh
3.ssh-keygen -t rsa -C 236504286@qq.com
4.其他回车默认值
5.查看 .ssh/id_rsa.pub 公钥
6.登陆github，settings->SSH AND GPGkeys 填写
7.git bash 创建 ssh 地址的别名 ssh -T git@github.com
